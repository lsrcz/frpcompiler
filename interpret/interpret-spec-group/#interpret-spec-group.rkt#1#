#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 201 38 128 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 201 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 698 0 29 3 18 #"#lang rosette/safe"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 7 #"require"
0 0 25 3 1 #" "
0 0 20 3 16 #"\"envionment.rkt\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 7 #"require"
0 0 25 3 1 #" "
0 0 20 3 27 #"\"spec-group-definition.rkt\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 7 #"require"
0 0 25 3 1 #" "
0 0 20 3 20 #"\"analyzed-value.rkt\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 17 #"rosette/lib/match"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 26 #"rosette/base/struct/struct"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"die"
0 0 25 3 3 #") ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"analyze-js-expr"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 3 2 #" ["
0 0 14 3 13 #"only-constant"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 5 #"match"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"prev"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 6 #"result"
0 0 25 3 2 #" ("
0 0 14 3 19 #"resolve-environment"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 3 1 #" "
0 0 14 3 13 #"only-constant"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 16 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 9 #"resolved?"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 14 #"resolved-value"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"               [("
0 0 14 3 10 #"not-found?"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 3 #") ("
0 0 14 3 3 #"die"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"               [("
0 0 14 3 10 #"too-early?"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 2 #") "
0 0 14 3 6 #"result"
0 0 25 3 5 #"])))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 10 #"analyzed-f"
0 0 25 3 2 #" ("
0 0 14 3 15 #"analyze-js-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ["
0 0 14 3 12 #"analyzed-lst"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 15 #"analyze-js-expr"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 14 #"analyzed-f-val"
0 0 25 3 2 #" ("
0 0 14 3 10 #"analyzed-f"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ["
0 0 14 3 16 #"analyzed-lst-val"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")) "
0 0 14 3 12 #"analyzed-lst"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 10 #"not-found?"
0 0 25 3 1 #" "
0 0 14 3 14 #"analyzed-f-val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 6 #"filter"
0 0 25 3 1 #" "
0 0 14 3 10 #"not-found?"
0 0 25 3 1 #" "
0 0 14 3 16 #"analyzed-lst-val"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"die"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 10 #"too-early?"
0 0 25 3 1 #" "
0 0 14 3 14 #"analyzed-f-val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 1 #" "
0 0 14 3 10 #"too-eqrly?"
0 0 25 3 1 #" "
0 0 14 3 16 #"analyzed-lst-val"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 9 #"too-early"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 14 #"analyzed-f-val"
0 0 25 3 1 #" "
0 0 14 3 16 #"analyzed-lst-val"
0 0 25 3 7 #"))))))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 6 #"result"
0 0 25 3 2 #" ("
0 0 14 3 19 #"resolve-environment"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 3 1 #" "
0 0 14 3 13 #"only-constant"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 16 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 9 #"resolved?"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 14 #"resolved-value"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"               [("
0 0 14 3 10 #"not-found?"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 3 #") ("
0 0 14 3 3 #"die"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"               [("
0 0 14 3 10 #"too-early?"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 2 #") "
0 0 14 3 6 #"result"
0 0 25 3 7 #"])))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"analyze-if"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 3 1 #" "
0 0 14 3 6 #"branch"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 16 #"analyzed-js-expr"
0 0 25 3 2 #" ("
0 0 14 3 15 #"analyze-js-expr"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 15 #"analyzed-branch"
0 0 25 3 2 #" ("
0 0 14 3 12 #"analyze-inst"
0 0 25 3 1 #" "
0 0 14 3 6 #"branch"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 14 #"analyzed-value"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 6 #"js-val"
0 0 25 3 2 #" ("
0 0 14 3 15 #"analyze-js-expr"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 10 #"too-early?"
0 0 25 3 1 #" "
0 0 14 3 6 #"js-val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 14 3 3 #"env"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 6 #"js-val"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                 (("
0 0 14 3 19 #"analyzed-value-call"
0 0 25 3 1 #" "
0 0 14 3 15 #"analyzed-branch"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 20 #"analyzed-value-unsub"
0 0 25 3 1 #" "
0 0 14 3 15 #"analyzed-branch"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"analyze-if-else"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 3 1 #" "
0 0 14 3 11 #"then-branch"
0 0 25 3 1 #" "
0 0 14 3 11 #"else-branch"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 16 #"analyzed-js-expr"
0 0 25 3 2 #" ("
0 0 14 3 15 #"analyze-js-expr"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 13 #"analyzed-then"
0 0 25 3 2 #" ("
0 0 14 3 12 #"analyze-inst"
0 0 25 3 1 #" "
0 0 14 3 11 #"then-branch"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 13 #"analyzed-else"
0 0 25 3 2 #" ("
0 0 14 3 12 #"analyze-inst"
0 0 25 3 1 #" "
0 0 14 3 11 #"else-branch"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 14 #"analyzed-value"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 6 #"js-val"
0 0 25 3 2 #" ("
0 0 14 3 16 #"analyzed-js-expr"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 10 #"too-early?"
0 0 25 3 1 #" "
0 0 14 3 6 #"js-val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 14 3 3 #"env"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 6 #"js-val"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                 (("
0 0 14 3 19 #"analyzed-value-call"
0 0 25 3 1 #" "
0 0 14 3 13 #"analyzed-then"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                 (("
0 0 14 3 19 #"analyzed-value-call"
0 0 25 3 1 #" "
0 0 14 3 13 #"analyzed-else"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 20 #"analyzed-value-unsub"
0 0 25 3 1 #" "
0 0 14 3 13 #"analyzed-else"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 20 #"analyzed-value-unsub"
0 0 25 3 1 #" "
0 0 14 3 13 #"analyzed-then"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"analyze-begin"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 4 #"let*"
0 0 25 3 3 #" (["
0 0 14 3 8 #"let-list"
0 0 25 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ["
0 0 14 3 4 #"next"
0 0 25 3 2 #" ("
0 0 14 3 4 #"last"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 14 #"let-trans-list"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 16 3 12 #"match-lambda"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                  [("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 16 3 3 #"let"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 16 #"analyzed-js-expr"
0 0 25 3 2 #" ("
0 0 14 3 15 #"analyze-js-expr"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 7 #"binding"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 16 #"analyzed-js-expr"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 14 3 8 #"let-list"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 13 #"analyzed-next"
0 0 25 3 2 #" ("
0 0 14 3 12 #"analyze-inst"
0 0 25 3 1 #" "
0 0 14 3 4 #"next"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"iter"
0 0 25 3 1 #" "
0 0 14 3 14 #"let-trans-list"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 14 #"let-trans-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"            (("
0 0 14 3 19 #"analyzed-value-call"
0 0 25 3 1 #" "
0 0 14 3 13 #"analyzed-next"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 3 #"cur"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 14 #"let-trans-list"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ["
0 0 14 3 4 #"rest"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 14 #"let-trans-list"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 3 #"val"
0 0 25 3 3 #" (("
0 0 14 3 13 #"binding-value"
0 0 25 3 1 #" "
0 0 14 3 3 #"cur"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 10 #"too-early?"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 14 3 3 #"env"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"iter"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 2 #" ("
0 0 14 3 18 #"add-stream-binding"
0 0 25 3 2 #" ("
0 0 14 3 12 #"binding-name"
0 0 25 3 1 #" "
0 0 14 3 3 #"cur"
0 0 25 3 2 #") "
0 0 14 3 3 #"val"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 14 #"analyzed-value"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 4 #"iter"
0 0 25 3 1 #" "
0 0 14 3 14 #"let-trans-list"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 20 #"analyzed-value-unsub"
0 0 25 3 1 #" "
0 0 14 3 13 #"analyzed-next"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"analyze-bind"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 7 #"js-expr"
0 0 25 3 1 #" "
0 0 14 3 4 #"next"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 16 #"analyzed-js-expr"
0 0 25 3 2 #" ("
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0           0
